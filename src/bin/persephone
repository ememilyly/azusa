#!/usr/bin/env python
import argparse
import discord
from discord.ext import commands
import logging
import persephone

import asyncio

EPILOG = """Persephone will check secrets in order of:
/run/secrets > env variables > secrets file (if specified)
"""

parser = argparse.ArgumentParser(
    description="Persephone - an overly artificial intelligent discord bot",
    formatter_class=argparse.RawTextHelpFormatter,
    epilog=EPILOG,
)
parser.add_argument(
    dest="prefix",
    help="Command prefix e.g. ,",
)
parser.add_argument(
    "-v",
    dest="verbose",
    action="store_true",
    help="Run logging in DEBUG",
)
parser.add_argument(
    "-s",
    dest="secrets_file",
    help="Specify a config file for secrets",
)
args = parser.parse_args()

# set up Secrets
persephone.Secrets.secrets_file = args.secrets_file

# set logging
LOG_LEVEL = logging.INFO
if args.verbose:
    LOG_LEVEL = logging.DEBUG
discord.utils.setup_logging(level=LOG_LEVEL)
_log = logging.getLogger(__name__)

# add my methods
commands.Context.paged_reply = persephone.methods.paged_reply


# main
async def main():
    async with bot:
        for ext in bot.available_extensions:
            try:
                await bot.load_extension(ext)
            except commands.ExtensionError:
                raise
                continue

        await bot.start(persephone.Secrets.get("BOT_TOKEN"))


if __name__ == "__main__":
    bot = persephone.Persephone(args.prefix, intents=discord.Intents.all())
    bot.owner_id = int(persephone.Secrets.get("OWNER_ID"))

    asyncio.run(main())
